name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/test_requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        cd mcp-doffin
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r test_requirements.txt

    - name: Lint with flake8 (optional)
      run: |
        cd mcp-doffin
        # Install flake8 if you want linting
        # pip install flake8
        # flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        echo "Linting skipped for now"

    - name: Run unit tests
      run: |
        cd mcp-doffin
        python -m pytest ../tests/test_unit.py -v --tb=short

    - name: Run integration tests  
      run: |
        cd mcp-doffin
        python -m pytest ../tests/test_integration.py -v --tb=short

    - name: Run tests with coverage
      run: |
        cd mcp-doffin
        python -m pytest ../tests/test_unit.py ../tests/test_integration.py --cov=mcp_doffin --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./mcp-doffin/coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  test-e2e:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Install dependencies
      run: |
        cd mcp-doffin
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r test_requirements.txt

    - name: Run end-to-end tests
      run: |
        cd mcp-doffin
        python -m pytest ../tests/test_e2e.py -v -m e2e --tb=short
      continue-on-error: true  # E2E tests may fail due to external dependencies

  test-server-startup:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12  
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Install dependencies
      run: |
        cd mcp-doffin
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Test MCP server startup
      run: |
        cd mcp-doffin
        timeout 10s python mcp_doffin.py || test $? = 124
        echo "Server started successfully (timed out as expected)"